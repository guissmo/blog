---
import Header from "../components/Header";
import Footer from "../components/Footer";
import Head from "../components/Head";
import react from "@astrojs/react";
import "@fontsource-variable/source-code-pro";
import "@fontsource-variable/fredoka";
import "@fontsource/rubik-mono-one";
---

<html lang="en">
  <head>
    <link
      rel="stylesheet"
      type="text/css"
      href=`${import.meta.env.BASE_URL}/style.css`
    />
    <link rel="sitemap" href=`${import.meta.env.BASE_URL}/sitemap-index.xml` />
    <Head />
    <meta name="generator" content={Astro.generator} />
    <title>Jared Asuncion | ChatJejePT</title>
  </head>
  <body>
    <main>
      <Header />
      <h2>ChatJejePT (Beta)</h2>
      <div>
        2023~ N~ pro jejemOn~ P~ rn PrENs~ M0h?~ itraNsL8 M0H ang gs2 MOnG SBhin
        wiTh 0UR VErY SMART VEry TLEntEd CHAtjejepT.~
      </div>
      <h3>Normal</h3>
      <div class="button-row"></div>
      <textarea id="inputBox" value=""></textarea>
      <h3>Translated</h3>
      <div id="translated"></div>
      <div class="button-row">
        <button id="random-button" class="button"
          >Generate random message</button
        >
        <button id="copy-button" class="button">Copy result to clipboard</button
        >
      </div>
      <br />
      <Footer />
    </main>

    <style>
      .button-row {
        display: flex;
        width: 100%;
        justify-content: center;
        gap: 5ex;
      }

      .button {
        width: 100%;
        border-radius: 10px;
        border: 1px black dashed;
        padding: 1ex 2em;
        font-size: 1.2rem;
        align-self: center;
        text-transform: uppercase;
      }

      #inputBox {
        width: calc(100% - 10px);
        font-family: "Fredoka Variable", sans-serif;
        resize: none;
        min-height: 20ex;
        max-height: 20ex;
        padding: 5px;
      }

      #translated {
        width: calc(100% - 10px);
        border: 1px black solid;
        min-height: 20ex;
        max-height: 20ex;
        padding: 5px;
        margin-bottom: 5ex;
        overflow-y: scroll;
      }

      h2 {
        font-weight: 700;
        padding-top: 3ex;
        text-transform: capitalize;
      }

      .date {
        width: fit-content;
      }

      .mainList {
        display: grid;
        grid-template-columns: auto 1fr;
        column-gap: clamp(10px, 5vw, 30px);
      }

      .contactInfo {
        display: grid;
        grid-template-columns: 10vw 1fr;
        column-gap: clamp(10px, 5vw, 30px);
        row-gap: 1ex;
      }

      .bio {
        padding-top: 5ex;
        padding-right: 10vw;
        font-size: 20px;
        text-align: justify;
        text-align-last: left;
      }

      .bio-footnote {
        font-size: 1rem;
        opacity: 0.8;
      }

      .monospace {
        font-family: "Source Code Pro Variable", sans-serif;
        font-weight: 300;
        text-align: right;
      }

      .bold {
        font-weight: 700;
      }

      .inline-list {
        width: 100%;
        gap: 1em;
        display: block;
      }

      .vertical-align-center {
        align-self: center;
      }

      .list-entry {
        display: inline-block;
      }

      .list-entry:not(:last-of-type):after {
        content: ",";
      }

      .list-entry:not(:last-of-type) {
        margin-right: 0.5em;
      }

      .block {
        display: block;
      }

      .cv-entry-title {
        font-weight: 600;
        font-size: 1.2rem;
      }

      .project-subtitle {
        font-weight: 500;
      }

      .links {
        opacity: 0.8;
      }

      .links:hover {
        opacity: 1;
      }

      .deemphasize {
        opacity: 0.8;
        font-weight: 500;
      }

      .emphasize-by-opacity {
        opacity: 1;
      }

      .no-wrap {
        white-space: no-wrap !important;
      }

      @media screen and (max-width: 640px) {
        .mainList {
          display: grid;
          grid-template-columns: 1fr;
          padding: 0 10px;
        }

        .contactInfo {
          display: grid;
          width: 95%;
          margin-left: auto;
          grid-template-columns: auto 1fr;
          column-gap: clamp(10px, 5vw, 30px);
        }

        .monospace {
          text-align: unset;
        }

        .align-right {
          text-align: right;
        }

        .inline-list {
          padding-left: 1em;
          width: unset;
        }

        .skill-category {
          padding-top: 1.5ex;
        }

        .cv-entry-title {
          font-size: 1.2rem;
        }

        .bio {
          padding-right: 0;
        }
      }
    </style>
    <script>
      function stickyCaps(over: string) {
        let result = "";
        let words = over.split(" ");

        for (const w of words) {
          const word = w.split("");
          for (let i = 0; i < word.length; i++) {
            if (word[i] === "o" || word[i] === "O") {
              if (Math.floor(Math.random() * 5) === 0) {
                word[i] = "0";
              }
            }

            if (word[i] == "i" || word[i] == "I") {
              result += "i";
              continue;
            }

            if (word[i] == "l" || word[i] == "L") {
              result += "L";
              continue;
            }

            if (Math.floor(Math.random() * 2) === 0) {
              result += word[i].toLowerCase();
            } else {
              result += word[i].toUpperCase();
            }
          }
          result += " ";
        }

        return result;
      }

      function replaceHahaAndHehe(input) {
        return input.replace(/(ha|he)(ha|he)+/g, (match) => {
          const jajaOrJeje = match.startsWith("ha") ? "ja" : "je";
          const repeatCount = match.length / 2; // Each "ha" or "he" corresponds to two characters
          const replacement = jajaOrJeje.repeat(repeatCount);
          return replacement;
        });
      }

      function replaceLetters(s: string) {
        let sabi = s.toLowerCase();
        sabi = sabi.replace(/\.\.\./g, " ~hayz~");
        sabi = sabi.replace(/'/g, "");
        sabi = sabi.replace(/’/g, "");
        sabi = sabi.replace(/‘/g, "");

        sabi = replaceHahaAndHehe(sabi);

        sabi = sabi.replace(/\b(\w+) \1\b/g, "$12x");
        sabi = sabi.replace(/\b(\w+)\-\1\b/g, "$12x");
        sabi = sabi.replace(/\b(\w{4}\w*)\1\b/g, "$12x");

        sabi = sabi.replace(/\bjared\b/, "pogi");
        sabi = sabi.replace(/\bguissmo\b/, "gwapo");

        sabi = sabi.replace(/sa i?yo/g, "sau");
        sabi = sabi.replace(/ok[ae]y\b/g, "k");
        sabi = sabi.replace(/\bidol\b/g, "lodi");
        sabi = sabi.replace(/\bhello\b/g, "e0w");
        sabi = sabi.replace(/\bmal[ou]p[ei]t\b/g, "petmalu");
        sabi = sabi.replace(/\b(mam|maam|mom)\b/g, "mamsh");
        sabi = sabi.replace(/\bgusto\b/g, "gs2");
        sabi = sabi.replace(/\bthanks?\b/g, "tnx");

        sabi = sabi.replace(/\bhuwag\b/g, "wag");
        sabi = sabi.replace(/\bwag\b/g, "wg");

        sabi = sabi.replace(/(([dtvz])i)(to|tu)([^aeiou])/g, "$22$4");
        sabi = sabi.replace(/(to|tu)/g, "2");

        sabi = sabi.replace(/-/g, " ");

        sabi = sabi.replace(/\bpinaka/g, "pnk");
        sabi = sabi.replace(/\bka (na )?(lang )?ba\b/g, "$1$2b u");
        sabi = sabi.replace(/\bka na\b/g, "n u");
        sabi = sabi.replace(/\bka\b/g, "u");
        sabi = sabi.replace(/\bn b u\b/g, "nb u");
        sabi = sabi.replace(/\b([knbsp])a\b/g, "$1");
        sabi = sabi.replace(/\b(hin)?di\b/g, "d");

        sabi = sabi.replace(/\b(a?)k[ou]((ng)?)\b/g, "$1q$2");
        sabi = sabi.replace(/\baking (\w+)\b/g, "$1 q");

        sabi = sabi.replace(/ganoo?n/g, "ganern");

        sabi = sabi.replace(/\byou/g, "u");
        sabi = sabi.replace(/\byo\b/g, "u");

        sabi = sabi.replace(/\bisa\b/g, "1");
        sabi = sabi.replace(/\bdalawa\b/g, "2");
        sabi = sabi.replace(/\btatlo\b/g, "3");
        sabi = sabi.replace(/\bapat\b/g, "4");
        sabi = sabi.replace(/\blima\b/g, "5");
        sabi = sabi.replace(/\banim\b/g, "6");
        sabi = sabi.replace(/\bpito\b/g, "7");
        sabi = sabi.replace(/\bwalo\b/g, "8");

        sabi = sabi.replace(/\bone\b/g, "1");
        sabi = sabi.replace(/\btwo\b/g, "2");
        sabi = sabi.replace(/\bthree\b/g, "3");
        sabi = sabi.replace(/\bfour\b/g, "4");
        sabi = sabi.replace(/\bfive\b/g, "5");
        sabi = sabi.replace(/\bsix\b/g, "6");
        sabi = sabi.replace(/\bseven\b/g, "7");
        sabi = sabi.replace(/\beight\b/g, "8");
        sabi = sabi.replace(/\bnine\b/g, "8");
        sabi = sabi.replace(/\bten\b/g, "8");
        sabi = sabi.replace(/ate\b/g, "8");

        sabi = sabi.replace(/\bsana all\b/g, "snaol");
        sabi = sabi.replace(/\ball\b/g, "ol");
        sabi = sabi.replace(/\bthe\b/g, "d");

        sabi = sabi.replace(/\bf+or+/g, "4");
        sabi = sabi.replace(/\bwan+/g, "1");
        sabi = sabi.replace(/wan+\b/g, "1");
        sabi = sabi.replace(/\Btri\B/g, "3");
        sabi = sabi.replace(/it[ei]n\b/g, "i10");
        sabi = sabi.replace(/\Bt+en+\B/g, "10");

        sabi = sabi.replace(/saan\b/g, "sn");

        sabi = sabi.replace(/tio/g, "siyo");
        sabi = sabi.replace(/iy([aeiou])/g, "y$1");
        sabi = sabi.replace(/k?s[yi]([ao])/g, "x$1");
        sabi = sabi.replace(/\byan(g?)/g, "yn$1");
        sabi = sabi.replace(/\by[ou]n(g?)/g, "un$1");
        sabi = sabi.replace(/kays/g, "kes");
        sabi = sabi.replace(/([bkdgpstlmnGwry])ya/g, "$1ia");
        sabi = sabi.replace(/\b(si|see)/g, "c");
        sabi = sabi.replace(/\bsea\b/g, "c");

        sabi = sabi.replace(/where/g, "wer");
        sabi = sabi.replace(/who/g, "hu");
        sabi = sabi.replace(/how/g, "hw");
        sabi = sabi.replace(/what/g, "wat");
        sabi = sabi.replace(/when/g, "wen");
        sabi = sabi.replace(/why/g, "y");
        sabi = sabi.replace(/are you\b/g, "u");
        sabi = sabi.replace(/love\b/g, "luv");
        sabi = sabi.replace(/\bif\b/g, "f");

        sabi = sabi.replace(/\bthat\b/g, "dt");
        sabi = sabi.replace(/\bthere\b/g, "der");
        sabi = sabi.replace(/\bthis\b/g, "dis");
        sabi = sabi.replace(/\bthose\b/g, "dose");
        sabi = sabi.replace(/\bthese\b/g, "dis");

        sabi = sabi.replace(/\b([dr]?)in\b/g, "$1n");

        sabi = sabi.replace(/ng/g, "G");

        sabi = sabi.replace(/([Ga-z])ay([Ga-z])/g, "$1ai$2");
        sabi = sabi.replace(/([^\b])ay\b/g, "$1ayz");
        sabi = sabi.replace(/aio/g, "au");
        sabi = sabi.replace(/kail/g, "kel");

        sabi = sabi.replace(/(G[aeiou]){2}/g, "$12");

        sabi = sabi.replace(/po\b/g, "p0h");
        sabi = sabi.replace(/([mpls])o\b/g, "$10h");
        sabi = sabi.replace(/\bno\b/g, "n0h");
        sabi = sabi.replace(/ano\b/g, "nu");

        sabi = sabi.replace(/([bkdgpstlmnwryh]a)+/g, (match, group) => {
          return match.split("a").join("") + "a";
        });

        sabi = sabi.replace(/([bkdgpstlmnwryh]e)+/g, (match, group) => {
          return match.split("e").join("") + "e";
        });

        sabi = sabi.replace(/([bkdgpstlmnwryh]i)+/g, (match, group) => {
          return match.split("i").join("") + "i";
        });

        sabi = sabi.replace(/([bkdgpstlmnwryh]o)+/g, (match, group) => {
          return match.split("o").join("") + "o";
        });

        sabi = sabi.replace(/([bkdgpstlmnwryh]u)+/g, (match, group) => {
          return match.split("u").join("") + "u";
        });

        sabi = sabi.replace(/\Bit\b/g, "8");
        sabi = sabi.replace(/kaloka/g, "klk");
        sabi = sabi.replace(/kita\b/g, "kta");
        sabi = sabi.replace(/man\b/g, "mn");
        sabi = sabi.replace(/\Bext/g, "xt");
        sabi = sabi.replace(/([aeiou])nks\b/g, "$1nx");

        sabi = sabi.replace(/\bpero\b/g, "pro");

        sabi = sabi.replace(
          /\b([bkdgpstlmnGwryh])a([bkdgpstlmnGwryh])/g,
          "$1$2"
        );

        sabi = sabi.replace(/G/g, "ng");

        // sabi = sabi.replace(/([^s ])o(ng)?\b/g, "$1u$2");
        sabi = sabi.replace(/ahingi\b/g, "enge");
        sabi = sabi.replace(/kita\b/g, "kita");
        sabi = sabi.replace(/kaibigan\b/g, "beshie");
        sabi = sabi.replace(/friends\b/g, "prens");
        sabi = sabi.replace(/esk\b/g, "x");
        sabi = sabi.replace(/st([aeiou])\b/g, "zt$1");
        sabi = sabi.replace(/i([mn])e\b/g, "y$1");
        sabi = sabi.replace(/ight\b/g, "yt");
        sabi = sabi.replace(/(\w+\w{2})er\b/g, "$1r");
        sabi = sabi.replace(/ould\b/g, "ud");
        sabi = sabi.replace(/\bn aq\b/g, "n me");
        sabi = sabi.replace(/\bever\b/g, "evr");
        sabi = sabi.replace(/erve\b/g, "urv");
        sabi = sabi.replace(/cute\b/g, "qt");
        sabi = sabi.replace(/ts\b/g, "tz");
        sabi = sabi.replace(/face/g, "pez");
        sabi = sabi.replace(/koy/g, "qy");

        return sabi;
      }

      function translate(inp: string | string[]) {
        let sabi: string | string[] = inp as string;
        sabi = sabi.toLowerCase();
        sabi = replaceLetters(sabi);
        // sabi = sabi.replace(/\|\|-\|/g, "-");
        // sabi = sabi.replace(/\|\|,\|\|/g, ",");
        sabi = sabi.replace(/  /g, " ");
        sabi = sabi.split(" ") as string[];

        for (let i = 0; i < sabi.length; i++) {
          if (Math.floor(Math.random() * 4) === 0) {
            if (sabi[i] === "<br>") {
              sabi[i] = "~<br>";
            } else if (sabi[i] !== "") {
              sabi[i] += "~";
            }
          } else {
            if (sabi[i] === "<br>") {
              sabi[i] = "<br>";
            } else {
              sabi[i] += "";
            }
          }
        }

        sabi = sabi.join(" ");
        sabi = sabi.replace(/   /g, " ");
        sabi = sabi.replace(/  /g, " ");
        sabi = sabi.replace(/NEWLINEPLZ/g, "<br>");
        sabi = stickyCaps(sabi);

        return sabi;
      }

      const defaultMessages = [];

      function add(s: string) {
        defaultMessages.push(s);
      }

      add(
        "Para kang sphinx, ugali mo'y napakastinks kung hiyain mo 'ko, talagang nakakashrink."
      );
      add("Maligo ka na. Malapit na ako.");
      add("I gave you everything, but you left me with nothing.");
      add(
        "I'll look into it. I'll get back to you on that. I'll give you an update."
      );
      add("Darling you gotta let me know, bakit ang pangit pangit mo.");
      add(`Ilang awit pa ba ang aawitin, oh giliw ko?
Ilang ulit pa ba ang uulitin, oh giliw ko?
Tatlong oras na akong nagpapacute sa'yo,
'Di mo man lang napapansin ang bagong t-shirt ko.`);
      add(
        `Ikaw ang binibini na ninanais ko
Binibining marikit na dalangin ko
Ikaw ang nagbigay ng kulay saking mundo
Sana ay panghabang buhay na ito`
      );
      add(
        `Oo, inaamin ko, saging lang kami. Pero maghanap ka ng puno sa buong Pilipinas, saging lang ang may puso! Saging lang ang may puso!`
      );
      add(
        `Sana kaya ko nang tiisin yung sa akin na nararamdaman ko, kasi ako namili nito diba? Ako yung may gusto. Sana kaya ko nang sabihin sa iyo na masaya ako para sa iyo, para sa inyo. Sana kaya ko. Sana kaya ko, pero hindi eh. Sama sama kong tao kasi ang totoo, umaasa pa rin ako sa piling mo. Sana ako pa rin. Ako na lang. Ako na lang ulit. `
      );
      add(`Maghihintay ako kahit kailan
Kahit na umabot mang ako'y nasa langit na
At kung 'di ka makita, makikiusap kay Bathala
Na ika'y hanapin at sabihin
Ipaalala sa iyo ang nakalimutang sumpaan
Na ako'y sa'yo at ika'y akin lamang`);
      add(
        `You know what, sir, in my 22 years of existence, I can say that there's nothing major major problem that I've done in my life because I'm very confident with my family, with the love that they are giving to me. So thank you so much that I'm here. Thank you, thank you so much!`
      );
      add(`You say goodbye and I say hello
Hello, hello
I don't know why you say goodbye, I say hello
Hello, hello
I don't know why you say goodbye, I say hello`);
      add(`Buhos na ulan aking mundo'y lunuring tuluyan
Tulad ng pag-agos mo 'di mapipigil
Ang puso kong nagliliyab
Pag-ibig ko'y umaapaw
Damdamin ko'y humihiyaw sa tuwa
Tuwing umuulan at kapiling ka`);
      add(`Pag-ibig ko sa iyo ay tunay at totoo
Sintamis ng wine, sintatag ng sunshine
Tunghayan mo sana ang aking pagsinta
Langit ng puso ko, oh ang pag-ibig mo, sinta`);
      add(`Exercise namin ay basketball
Papagurin ka, hihingalin ka
Lalabas ang pawis mo sa basketball
Bawat shoot ay two points
Minsan nama'y 3 points
Hindi ko kaya ang 4 points`);
      add(`Kaibigan lang pala
Kaibigan lang pala
Napawi ang aking pangangamba
Aking nadarama, ngayo'y pag-asa na
'Pagkat siya ay kaibigan lang pala`);

      const inputBox = document.getElementById("inputBox");
      const copyButton = document.getElementById("copy-button");
      const randomButton = document.getElementById("random-button");

      inputBox.addEventListener("input", () => {
        document.getElementById("translated").innerText = translate(
          inputBox.value
        );
      });
      inputBox.addEventListener("keyup", () => {
        document.getElementById("translated").innerText = translate(
          inputBox.value
        );
      });
      copyButton.addEventListener("click", () => {
        navigator.clipboard.writeText(
          document.getElementById("translated").innerText
        );
      });
      randomButton.addEventListener("click", () => {
        const randomIndex = Math.floor(Math.random() * defaultMessages.length);
        const randomElement = defaultMessages[randomIndex];
        inputBox.value = randomElement;
        document.getElementById("translated").innerText = translate(
          inputBox.value
        );
      });
    </script>
  </body>
</html>
