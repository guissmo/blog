---
import Header from "../components/Header";
import Footer from "../components/Footer";
import Head from "../components/Head";
import react from "@astrojs/react";
import "@fontsource-variable/source-code-pro";
import "@fontsource-variable/fredoka";
import "@fontsource/rubik-mono-one";
---

<html lang="en">
  <head>
    <link
      rel="stylesheet"
      type="text/css"
      href=`${import.meta.env.BASE_URL}/style.css`
    />
    <link rel="sitemap" href=`${import.meta.env.BASE_URL}/sitemap-index.xml` />
    <Head />
    <meta name="generator" content={Astro.generator} />
    <title>Jared Asuncion | Jologs-inator</title>
  </head>
  <body>
    <main>
      <Header />
      <h2>Jologs-inator 2023 (Beta)</h2>
      <form name="form">
        <br />
        <div>
          gs2 U ba mgIng JOLogs, n0h? E2Ng PrA xaU LoLZ! VErsioN 3 nA p0H ItO
          P0h. hpI aQ.{" "}
        </div>
        <br />
        <br />
        <br />
        <h3>Normal</h3>
        <textarea id="inputBox" value="" rows="6" cols="60"></textarea>
        <h3>Translated</h3>
        <div id="translated"></div>
      </form>
      <br />
      <Footer />
    </main>

    <style>
      h2 {
        font-weight: 700;
        padding-top: 3ex;
        text-transform: capitalize;
      }

      .date {
        width: fit-content;
      }

      .mainList {
        display: grid;
        grid-template-columns: auto 1fr;
        column-gap: clamp(10px, 5vw, 30px);
      }

      .contactInfo {
        display: grid;
        grid-template-columns: 10vw 1fr;
        column-gap: clamp(10px, 5vw, 30px);
        row-gap: 1ex;
      }

      .bio {
        padding-top: 5ex;
        padding-right: 10vw;
        font-size: 20px;
        text-align: justify;
        text-align-last: left;
      }

      .bio-footnote {
        font-size: 1rem;
        opacity: 0.8;
      }

      .monospace {
        font-family: "Source Code Pro Variable", sans-serif;
        font-weight: 300;
        text-align: right;
      }

      .bold {
        font-weight: 700;
      }

      .inline-list {
        width: 100%;
        gap: 1em;
        display: block;
      }

      .vertical-align-center {
        align-self: center;
      }

      .list-entry {
        display: inline-block;
      }

      .list-entry:not(:last-of-type):after {
        content: ",";
      }

      .list-entry:not(:last-of-type) {
        margin-right: 0.5em;
      }

      .block {
        display: block;
      }

      .cv-entry-title {
        font-weight: 600;
        font-size: 1.2rem;
      }

      .project-subtitle {
        font-weight: 500;
      }

      .links {
        opacity: 0.8;
      }

      .links:hover {
        opacity: 1;
      }

      .deemphasize {
        opacity: 0.8;
        font-weight: 500;
      }

      .emphasize-by-opacity {
        opacity: 1;
      }

      .no-wrap {
        white-space: no-wrap !important;
      }

      @media screen and (max-width: 640px) {
        .mainList {
          display: grid;
          grid-template-columns: 1fr;
          padding: 0 10px;
        }

        .contactInfo {
          display: grid;
          width: 95%;
          margin-left: auto;
          grid-template-columns: auto 1fr;
          column-gap: clamp(10px, 5vw, 30px);
        }

        .monospace {
          text-align: unset;
        }

        .align-right {
          text-align: right;
        }

        .inline-list {
          padding-left: 1em;
          width: unset;
        }

        .skill-category {
          padding-top: 1.5ex;
        }

        .cv-entry-title {
          font-size: 1.2rem;
        }

        .bio {
          padding-right: 0;
        }
      }
    </style>
    <script>
      function stickyCaps(over: string) {
        let result = "";
        let words = over.split(" ");

        for (const w of words) {
          const word = w.split("");
          for (let i = 0; i < word.length; i++) {
            if (word[i] === "o" || word[i] === "O") {
              if (Math.floor(Math.random() * 5) === 0) {
                word[i] = "0";
              }
            }

            if (Math.floor(Math.random() * 2) === 0) {
              result += word[i].toLowerCase();
            } else {
              result += word[i].toUpperCase();
            }
          }
          result += " ";
        }

        return result;
      }

      function translate(inp: string | string[]) {
        let sabi: string | string[] = inp as string;
        // if (sabi === "") {
        //   const randomValue = Math.floor(Math.random() * 7) + 1;
        //   switch (randomValue) {
        //     case 1:
        //       sabi = "gudam p0h mga peepz of da world! -gm-";
        //       break;
        //     case 2:
        //       sabi = "ingat p0h u lagi. mwahuggz. -gm-";
        //       break;
        //     case 3:
        //       sabi = "kmain na me. kmain nb u? -gm-";
        //       break;
        //     case 4:
        //       sabi = "penge p0h ng kowtz. lolz. hehe. -gm-";
        //       break;
        //     case 5:
        //       sabi = "la p0h me magawa. -gm-";
        //       break;
        //     case 6:
        //       sabi = "pwede p0h b mging txtm8 us? -gm-";
        //       break;
        //     case 7:
        //       sabi = "nkload n rin me ng unli sa wks!!!!! -gm-";
        //       break;
        //   }
        // }

        sabi = sabi.toLowerCase();
        sabi = sabi.replace(/\.\.\./g, " ~hayz~");
        sabi = sabi.replace(/'/g, "");
        sabi = sabi.replace(/’/g, "");
        sabi = sabi.replace(/‘/g, "");
        sabi = sabi.replace(/-/g, " ||-||");
        sabi = sabi.replace(/,/g, " ||,||");
        sabi = sabi.replace(/kaloka/g, "klk");
        sabi = sabi.replace(/ see /g, " c ");
        sabi = sabi.replace(/loka/g, "lurkey");
        sabi = sabi.replace(/ganun/g, "ganern");
        sabi = sabi.replace(/ganoon/g, "ganern");
        sabi = sabi.replace(/ganon/g, "ganern");
        sabi = sabi.replace(/ friend/g, "beshie");
        sabi = sabi.replace(/([^ ])ay[ $]/g, "$1ayz ");
        sabi = sabi.replace(/esk/g, "x");
        sabi = sabi.replace(/ say /g, " sei ");
        sabi = sabi.replace(/ lang/g, " lng");
        sabi = sabi.replace(/ yong/g, " yng");
        sabi = sabi.replace(/ yong /g, " yng ");
        sabi = sabi.replace(/ iyong/g, " yng");
        sabi = sabi.replace(/time/g, "tym");
        sabi = sabi.replace(/say/g, "xai");
        sabi = sabi.replace(/baka/g, "vkh");
        sabi = sabi.replace(/kaka/g, "ka2");
        sabi = sabi.replace(/pinaka/g, "pnk");
        sabi = sabi.replace(/ hindi /g, " d ");
        sabi = sabi.replace(/ di /g, " d ");
        sabi = sabi.replace(/kem/g, "km");
        sabi = sabi.replace(/okay/g, "ok");
        sabi = sabi.replace(/huwag/g, "wg");
        sabi = sabi.replace(/wag/g, "wg");
        sabi = sabi.replace(/sc/g, "x");
        sabi = sabi.replace(/kayo/g, "kyu");
        sabi = sabi.replace(/tia/g, "xa");
        sabi = sabi.replace(/okay/g, "ok");
        sabi = sabi.replace(/ sc/g, " x");
        sabi = sabi.replace(/kayo/g, "kyu");
        sabi = sabi.replace(/tia/g, "xa");
        sabi = sabi.replace(/hehe/g, "jeje");
        sabi = sabi.replace(/haha/g, "jaja");
        sabi = sabi.replace(/jehe/g, "jeje");
        sabi = sabi.replace(/jaha/g, "jaja");
        sabi = sabi.replace(/ate/g, "z8z");
        sabi = sabi.replace(/ z8z /g, " ate ");
        sabi = sabi.replace(/z8z/g, "8");
        sabi = sabi.replace(/all/g, "ol");
        sabi = sabi.replace(/ out /g, " zoutz ");
        sabi = sabi.replace(/out /g, "outz ");
        sabi = sabi.replace(/zoutz/g, "awtz");
        sabi = sabi.replace(/it's/g, "8s");
        sabi = sabi.replace(/baby/g, "bheybie");
        sabi = sabi.replace(/quote/g, "kowt");
        sabi = sabi.replace(/siya/g, "xia");
        sabi = sabi.replace(/kasi/g, "kz");
        sabi = sabi.replace(/ike/g, "yk");
        sabi = sabi.replace(/ are /g, " r ");
        sabi = sabi.replace(/are /g, "eyr");
        sabi = sabi.replace(/this/g, "dis");
        sabi = sabi.replace(/that/g, "dat");
        sabi = sabi.replace(/those/g, "doze");
        sabi = sabi.replace(/these/g, "deez");
        sabi = sabi.replace(/ the /g, " d ");
        sabi = sabi.replace(/sayo/g, "xeio");
        sabi = sabi.replace(/girl/g, "gurl");
        sabi = sabi.replace(/ano/g, "nu");
        sabi = sabi.replace(/s /g, "z ");
        sabi = sabi.replace(/hindi/g, "ndi");
        sabi = sabi.replace(/ka lang/g, "lng u");
        sabi = sabi.replace(/nandito/g, "dito");
        sabi = sabi.replace(/dito na ako/g, "d2 n p0h me");
        sabi = sabi.replace(/po /g, "p0h ");
        sabi = sabi.replace(/gusto/g, "gs2");
        sabi = sabi.replace(/no /g, "n0h ");
        sabi = sabi.replace(/siy/g, "x");
        sabi = sabi.replace(/nang/g, "ng");
        sabi = sabi.replace(/heto/g, "eto");
        sabi = sabi.replace(/eto /g, "e2 ");
        sabi = sabi.replace(/etong /g, "e2ng ");
        sabi = sabi.replace(/sy/g, "x");
        sabi = sabi.replace(/love/g, "luv");
        sabi = sabi.replace(/hate/g, "8");
        sabi = sabi.replace(/dito/g, "d2");
        sabi = sabi.replace(/ka na ba[^A-Za-z]/g, "n b u");
        sabi = sabi.replace(/ka na/g, "n u");
        sabi = sabi.replace(/hindi ba/g, "db");
        sabi = sabi.replace(/di ba/g, "db");
        sabi = sabi.replace(/di /g, "d ");
        sabi = sabi.replace(/ngayon/g, "ngaun");
        sabi = sabi.replace(/text/g, "txt");
        sabi = sabi.replace(/to you/g, "2u");
        sabi = sabi.replace(/ayo /g, "au ");
        sabi = sabi.replace(/ife/g, "yf");
        sabi = sabi.replace(/oo /g, "uu ");
        sabi = sabi.replace(/nandito/g, "nnd2");
        sabi = sabi.replace(/yon/g, "yn");
        sabi = sabi.replace(/who/g, "hu");
        sabi = sabi.replace(/what/g, "wat");
        sabi = sabi.replace(/when/g, "wen");
        sabi = sabi.replace(/where/g, "wer");
        sabi = sabi.replace(/yan/g, "yn");
        sabi = sabi.replace(/punta/g, "pnta");
        sabi = sabi.replace(/ am /g, " m ");
        sabi = sabi.replace(/good morning/g, "gudam");
        sabi = sabi.replace(/good afternoon/g, "gudpm");
        sabi = sabi.replace(/good evening/g, "gudpm");
        sabi = sabi.replace(/hello/g, "eow p0h");
        sabi = sabi.replace(/sige/g, "cge");
        sabi = sabi.replace(/sure/g, "xur");
        sabi = sabi.replace(/happy/g, "hpi");
        sabi = sabi.replace(/na ba[^A-Za-z]/g, "nb$1");
        sabi = sabi.replace(/yung/g, "ung");
        sabi = sabi.replace(/friend/g, "friendship");
        sabi = sabi.replace(/ti/g, "t");
        sabi = sabi.replace(/bi/g, "b");
        sabi = sabi.replace(/baby/g, "beybi");
        sabi = sabi.replace(/babes/g, "bebs");
        sabi = sabi.replace(/to you/g, "2u");
        sabi = sabi.replace(/for you/g, "4u");
        sabi = sabi.replace(/mong/g, "u");
        sabi = sabi.replace(/ mo /g, " u ");
        sabi = sabi.replace(/ si /g, " c ");
        sabi = sabi.replace(/ sina /g, " cna ");
        sabi = sabi.replace(/to/g, "2");
        sabi = sabi.replace(/you/g, "u");
        sabi = sabi.replace(/\./g, " p0h.");
        sabi = sabi.replace(/\?/g, ", n0h?");
        sabi = sabi.replace(/!/g, " lolz!");
        sabi = sabi.replace(/tu/g, "2u");
        sabi = sabi.replace(/night/g, "nyt");
        sabi = sabi.replace(/saan/g, "sn");
        sabi = sabi.replace(/kailan/g, "klan");
        sabi = sabi.replace(/paano/g, "pnu");
        sabi = sabi.replace(/bakit/g, "y");
        sabi = sabi.replace(/sinu-sino/g, "cnucnu");
        sabi = sabi.replace(/sino-sino/g, "cnucnu");
        sabi = sabi.replace(/nu ang/g, "nu");
        sabi = sabi.replace(/friendster/g, "frndstr");
        sabi = sabi.replace(/testimonial/g, "testi");
        sabi = sabi.replace(/really/g, "rly");
        sabi = sabi.replace(/sino/g, "cnu");
        sabi = sabi.replace(/jared/g, "pogi");
        sabi = sabi.replace(/guissmo/g, "gwapo");
        sabi = sabi.replace(/ikaw/g, "u");
        sabi = sabi.replace(/ako/g, "aq");
        sabi = sabi.replace(/ ko/g, " q");
        sabi = sabi.replace(/ and /g, " nd ");
        sabi = sabi.replace(/hin/g, "hn");
        sabi = sabi.replace(/hai/g, "zzhzaizz");
        sabi = sabi.replace(/lai/g, "zzlzaizz");
        sabi = sabi.replace(/kai/g, "zzkzaizz");
        sabi = sabi.replace(/nai/g, "zznzaizz");
        sabi = sabi.replace(/bai/g, "zzbzaizz");
        sabi = sabi.replace(/gai/g, "zzgzaizz");
        sabi = sabi.replace(/mai/g, "zzmzaizz");
        sabi = sabi.replace(/wai/g, "zzwzaizz");
        sabi = sabi.replace(/pai/g, "zzpzaizz");
        sabi = sabi.replace(/sai/g, "zzpzaizz");
        sabi = sabi.replace(/haa/g, "zzhzaazz");
        sabi = sabi.replace(/laa/g, "zzlzaazz");
        sabi = sabi.replace(/kaa/g, "zzkzaazz");
        sabi = sabi.replace(/naa/g, "zznzaazz");
        sabi = sabi.replace(/baa/g, "zzbzaazz");
        sabi = sabi.replace(/gaa/g, "zzgzaazz");
        sabi = sabi.replace(/maa/g, "zzmzaazz");
        sabi = sabi.replace(/waa/g, "zzwzaazz");
        sabi = sabi.replace(/paa/g, "zzpzaazz");
        sabi = sabi.replace(/saa/g, "zzpzaazz");
        sabi = sabi.replace(/na /g, "zznzazz");
        sabi = sabi.replace(/ba /g, "zzbzazz");
        sabi = sabi.replace(/ga /g, "zzgzazz");
        sabi = sabi.replace(/ma /g, "zzmzazz");
        sabi = sabi.replace(/wa /g, "zzwzazz");
        sabi = sabi.replace(/pa /g, "zzpzazz");
        sabi = sabi.replace(/ha /g, "zzhzazz");
        sabi = sabi.replace(/ka /g, "zzkzazz");
        sabi = sabi.replace(/sa /g, "zzszazz");
        sabi = sabi.replace(/na/g, "n");
        sabi = sabi.replace(/ba/g, "b");
        sabi = sabi.replace(/ga/g, "g");
        sabi = sabi.replace(/ma/g, "m");
        sabi = sabi.replace(/wa/g, "w");
        sabi = sabi.replace(/pa/g, "p");
        sabi = sabi.replace(/ka/g, "k");
        sabi = sabi.replace(/sa/g, "s");
        sabi = sabi.replace(/zzkzazz/g, "ka ");
        sabi = sabi.replace(/zznzazz/g, "na ");
        sabi = sabi.replace(/zzbzazz/g, "ba ");
        sabi = sabi.replace(/zzgzazz/g, "ga ");
        sabi = sabi.replace(/zzmzazz/g, "ma ");

        sabi = sabi.replace(/zzwzazz/g, "wa ");
        sabi = sabi.replace(/zzpzazz/g, "pa ");
        sabi = sabi.replace(/zzszazz/g, "sa ");
        sabi = sabi.replace(/zzhzazz/g, "ha ");
        sabi = sabi.replace(/zzkzazz/g, "ka ");
        sabi = sabi.replace(/zznzaizz/g, "nai");
        sabi = sabi.replace(/zzbzaizz/g, "bai");
        sabi = sabi.replace(/zzgzaizz/g, "gai");
        sabi = sabi.replace(/zzmzaizz/g, "mai");
        sabi = sabi.replace(/zzwzaizz/g, "wai");
        sabi = sabi.replace(/zzpzaizz/g, "pai");
        sabi = sabi.replace(/zzhzaizz/g, "hai");
        sabi = sabi.replace(/zzlzaizz/g, "lai");
        sabi = sabi.replace(/zzkzaizz/g, "kai");
        sabi = sabi.replace(/zzszaizz/g, "sai");
        sabi = sabi.replace(/zznzaazz/g, "naa");
        sabi = sabi.replace(/zzbzaazz/g, "baa");
        sabi = sabi.replace(/zzgzaazz/g, "gaa");
        sabi = sabi.replace(/zzmzaazz/g, "maa");
        sabi = sabi.replace(/zzwzaazz/g, "waa");
        sabi = sabi.replace(/zzpzaazz/g, "paa");
        sabi = sabi.replace(/zzhzaazz/g, "haa");
        sabi = sabi.replace(/zzlzaazz/g, "laa");
        sabi = sabi.replace(/zzkzaazz/g, "kaa");
        sabi = sabi.replace(/zzszaazz/g, "saa");
        sabi = sabi.replace(/vkh/g, "vkah");
        sabi = sabi.replace(/ the /g, " d ");
        sabi = sabi.replace(/ air/g, "zzzairzzz");
        sabi = sabi.replace(/air/g, "r");
        sabi = sabi.replace(/zzzairzzz/g, " air");
        sabi = sabi.replace(/ ka /g, " u ");
        sabi = sabi.replace(/who u, n0h?/g, "hu u?");
        sabi = sabi.replace(/syo/g, "sau");
        sabi = sabi.replace(/ is /g, " s ");
        sabi = sabi.replace(/ are /g, " r ");
        sabi = sabi.replace(/p0h/g, "p0wh");
        sabi = sabi.replace(/\|\|-\|/g, "-");
        sabi = sabi.replace(/\|\|,\|\|/g, ",");
        sabi = sabi.replace(/  /g, " ");
        sabi = sabi.split(" ") as string[];

        for (let i = 0; i < sabi.length; i++) {
          if (Math.floor(Math.random() * 4) === 0) {
            if (sabi[i] === "<br>") {
              sabi[i] = "~<br>";
            } else if (sabi[i] !== "") {
              sabi[i] += "~";
            }
          } else {
            if (sabi[i] === "<br>") {
              sabi[i] = "<br>";
            } else {
              sabi[i] += "";
            }
          }
        }

        sabi = sabi.join(" ");
        sabi = sabi.replace(/   /g, " ");
        sabi = sabi.replace(/  /g, " ");
        sabi = sabi.replace(/NEWLINEPLZ/g, "<br>");
        sabi = stickyCaps(sabi);

        return sabi;
      }

      const inputBox = document.getElementById("inputBox");
      inputBox.addEventListener("input", () => {
        document.getElementById("translated").innerText = translate(
          inputBox.value
        );
      });
    </script>
  </body>
</html>
