---
import { allBlogPostsByCategory } from "./blog.ts";
import Header from "../components/Header";
import Footer from "../components/Footer";
import "@fontsource-variable/source-code-pro";
import "@fontsource-variable/fredoka";
import "@fontsource/rubik-mono-one";
---

<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="title" content="Jared Asuncion | Blog" />
    <meta name="description" content="This is Jared Asuncion's blog." />
    <meta name="author" content="Jared Asuncion" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="stylesheet"
      type="text/css"
      href=`${import.meta.env.BASE_URL}/style.css`
    />
    <link rel="sitemap" href=`${import.meta.env.BASE_URL}/sitemap-index.xml` />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/blog/favicon/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/blog/favicon/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/blog/favicon/favicon-16x16.png"
    />
    <link rel="manifest" href="/blog/favicon/site.webmanifest" />
    <title>Jared Asuncion | Blog</title>
  </head>
  <body>
    <main>
      <Header />
      <div class="postList">
        {
          Object.keys(allBlogPostsByCategory).map((category) => {
            return (
              <>
                <>
                  <span>&nbsp;</span>
                  <h2>{category}</h2>
                </>
                {allBlogPostsByCategory[category]
                  .slice(0, 5)
                  .map(({ slug, data }, index) => {
                    const { date } = data;

                    function dateToString(date: Date) {
                      let year = date.getFullYear();
                      let month = pad(date.getMonth() + 1);
                      let day = pad(date.getDate());

                      return [year, month, day].join(".");
                    }

                    function pad(num: number) {
                      return num.toString().padStart(2, "0");
                    }

                    return (
                      <>
                        <span
                          style={`opacity: ${1 - index * 0.1}`}
                          class="monospace date"
                        >
                          {dateToString(date)}
                        </span>
                        <a
                          style={`opacity: ${1 - index * 0.1}`}
                          href={`${import.meta.env.BASE_URL}/${slug}`}
                        >
                          {data.title}
                        </a>
                      </>
                    );
                  })}
              </>
            );
          })
        }
      </div>
      <Footer />
    </main>
  </body>
</html>

<style>
  h2 {
    font-weight: 700;
    padding-top: 3ex;
  }

  .date {
    width: fit-content;
  }

  .postList {
    display: grid;
    grid-template-columns: auto 1fr;
    column-gap: clamp(10px, 5vw, 30px);
  }

  .monospace {
    font-family: "Source Code Pro Variable", sans-serif;
    font-weight: 300;
  }
</style>
